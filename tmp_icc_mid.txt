                lineHeight: '1.35',
                letterSpacing: '-0.01em'
              }}
            >
              {botName}
            </span>
            <div className="flex items-center text-xs text-gray-500 dark:text-gray-400 gap-1">
              <Clock className="w-3 h-3" />
              <span style={{ letterSpacing: '0.01em' }}>
                {getTimeAgo(cherry.created_at)}
              </span>
            </div>
          </div>
        </div>

                 {/* Category Badge - Clickable for filtering */}
         <button
           onClick={(e) => {
             e.stopPropagation();
             handleCategoryClick();
           }}
           className={`
             text-xs px-2 py-1 rounded-md font-medium flex items-center gap-1 transition-all duration-200
             ${categoryId ? 'hover:scale-105 hover:shadow-md cursor-pointer' : 'cursor-default'}
           `}
           style={{ 
             backgroundColor: getCategoryBadgeColor(categoryId),
             color: categoryId && categoryColors[categoryId as keyof typeof categoryColors] 
               ? categoryColors[categoryId as keyof typeof categoryColors].textColor 
               : '#ffffff',
             letterSpacing: '0.01em'
           }}
           title={categoryId ? `Filter by ${categoryId} category (${categoryColors[categoryId as keyof typeof categoryColors]?.name || categoryId})` : 'Category'}
         >
          {categoryIcon.endsWith('.png') ? (
            <img 
              src={`/${categoryIcon}`}
              alt="Category icon"
              className="w-4 h-4 object-contain"
            />
          ) : (
            <span>{categoryIcon}</span>
          )}
        </button>
      </div>

      {/* Content Preview */}
      <div className="px-4 pb-4 pt-0">
        <h3 
          className="font-bold text-lg mb-2 text-gray-900 dark:text-gray-100"
          style={{ 
            lineHeight: '1.3',
            letterSpacing: '-0.015em'
          }}
        >
          {cherry.title}
        </h3>
        <div 
          className="text-sm text-gray-700 dark:text-gray-300"
          style={{ 
            lineHeight: '1.7',
            letterSpacing: '0.005em'
          }}
        >
          {cherry.content.length > 200 ? (
            <div>
              <p>
                {isContentExpanded 
                  ? cherry.content
                  : `${cherry.content.substring(0, 200)}...`
                }
              </p>
              <button
                onClick={(e) => {
                  e.stopPropagation();
                  toggleContentExpanded();
                }}
                className="text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 font-medium mt-1 transition-colors"
              >
                {isContentExpanded ? 'Show less' : 'Show more'}
              </button>
            </div>
          ) : (
            <p>{cherry.content}</p>
          )}
        </div>
      </div>

      {/* Public Like System & Comments */}
      <div className="px-4 py-3 flex items-center justify-between border-t border-gray-100 dark:border-gray-700 flex-shrink-0">
        {/* Public Cherry Like */}
                 <button
           onClick={(e) => {
             e.stopPropagation();
             handlePublicLike();
           }}
           disabled={isReacting}
           className={`
             flex items-center space-x-2 text-gray-500 dark:text-gray-400 hover:text-cherry-500 transition-all duration-200
             ${isReacting ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}
             group
           `}
           title={isLiked ? "Unlike this cherry" : "Like this cherry"}
         >
           <div className="relative">
             <img 
               src={isLiked ? "/cherry-liked.png" : "/cherry-empty.png"}
               alt={isLiked ? "Liked cherry" : "Empty cherry"}
               className={`w-4 h-4 object-contain transition-all duration-200 ${
                 isLiked ? 'animate-pulse' : 'group-hover:scale-110 group-hover:animate-bounce'
               }`}
             />
             {isLiked && (
               <div className="absolute -top-1 -right-1 w-2 h-2 bg-cherry-400 rounded-full animate-ping"></div>
             )}
           </div>
           <span 
             className="font-medium text-gray-500 dark:text-gray-400 group-hover:text-cherry-500"
             style={{ fontSize: '0.8125rem' }}
           >
             {publicLikes}
           </span>
         </button>

        {/* Comments Count */}
        <div className="flex items-center space-x-1 text-gray-500 dark:text-gray-400">
          <MessageCircle className="w-4 h-4" />
          <span 
            className="font-medium"
            style={{ fontSize: '0.8125rem' }}
          >
            {cherry.comment_count || 0}
          </span>
        </div>
      </div>

              {/* Expandable Personal Collection Section */}
      <div className="border-t border-gray-100 dark:border-gray-700 flex-shrink-0 relative">
        {/* Expand/Collapse Tab */}
        <button
          onClick={(e) => {
            e.stopPropagation();
            toggleExpanded();
          }}
          className="w-full flex items-center justify-center py-2 px-4 bg-gray-50 dark:bg-gray-900 hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors group"
        >
          <div className="flex items-center space-x-2 text-gray-700 dark:text-gray-200 group-hover:text-gray-800 dark:group-hover:text-gray-100">
            <img 
              src="/pick-large.png"
              alt="Pick cherry icon"
              className="w-6 h-6 object-contain"
            />
            <span 
              className="font-medium"
              style={{ fontSize: '0.875rem' }}
            >
              Pick Cherry
            </span>
            {isExpanded ? (
              <ChevronUp className="w-4 h-4 transition-transform" />
            ) : (
              <ChevronDown className="w-4 h-4 transition-transform" />
            )}
          </div>
        </button>

                 {/* Expandable Content - Absolute Positioned Overlay */}
         <div className={`
           absolute top-full left-0 right-0 z-20
           overflow-hidden transition-all duration-300 ease-in-out
